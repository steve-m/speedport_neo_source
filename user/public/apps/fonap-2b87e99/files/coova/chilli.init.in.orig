#! /bin/sh
# zonap start/stop script
### BEGIN INIT INFO
# Provides:          zonap
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog $network
# Default-Start:     3 4 5
# Default-Stop:      0 2 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO
PATH=/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/sbin/chilli
RADCONFIG=/usr/sbin/chilli_radconfig
NAME=chilli
DESC=chilli
CONFFILE=/etc/chilli.conf
TEMPORAL_CONFFILE=/tmp/chilli.conf
NASID=00-18-84-D0-0E-C9
DNS_SERVER=8.8.8.8
RADIUSSERVER1=radconfig01.fon.com
RADIUSSERVER2=radconfig02.fon.com
RADIUSSECRET=garrafon
DEVICE=$(cat /etc/fon_device)
VERSION=$(cat /etc/fon_version)
REVISION=$(cat /etc/fon_revision)
#RADIUSADMUSR=FONAP-fonera20-2.1.0.1
RADIUSADMUSR=FON02-${DEVICE}-${VERSION}.${REVISION}
RADIUSADMPWD=chillispot 
LANIP=192.168.182.1

USING_CMDSOCK=1
START_CHILLI=0
WHITELIST=/etc/fon/whitelist
WWWDIR=/etc/fon/www

IDLETIMEOUT=600

RADIUSRETRY=1
RADIUSRETRYSEC=1
RADIUSTIMEOUT=7

if [ -f /etc/default/chilli ] ; then
   . /etc/default/chilli
fi

if [ -f /etc/default/fonap ] ; then
   . /etc/default/fonap
fi

CHILLOUT_OPTS=""
#if [ $FONAP_TUNNELS -eq 1 ]; then
#	CHILLOUT_OPTS="--module=chillout:/tmp/chillout:"
	# To use RADIUS for auth + acct (leave blank)
	# To use RADIUS for acct, but not auth
#	if [ $FONAP_NORADAUTH -eq 1 ]; then
#		CHILLOUT_OPTS="$CHILLOUT_OPTS:noradauth"
#		if [ $FONAP_NORADACCT -eq 1 ]; then
#			CHILLOUT_OPTS="$CHILLOUT_OPTS:noradacct"
#		fi
#	fi
#fi

if [ $FONAP_FONAPI -eq 1 ]; then
	CHILLOUT_OPTS="--module=fon-api:/usr/sbin/api-example.sh"
fi

# get the mac address used for this FONAP
if [ -f /etc/fon_mac ] ; then
   NASID=`cat /etc/fon_mac`
fi

OPTS="--dns1=$DNS_SERVER --dns2=$DNS_SERVER --uamuiport=0 \
--radiusnasid=$NASID --dhcpif=$DHCPIF --papalwaysok \
--localusers=/etc/fon/localusers --pidfile=/var/run/$NAME.pid \
--challengetimeout=0 --challengetimeout2=0 \
--uamdomainfile=$WHITELIST --redirdnsreq --defidletimeout=$IDLETIMEOUT"

# [ "$USING_CHILLOUT" = "1" ] && 
OPTS="$OPTS $CHILLOUT_OPTS"
[ "$USING_CMDSOCK" = "1" ] && OPTS="$OPTS --cmdsock=/var/run/chilli.sock"
[ "$WWWDIR" != "" ] && OPTS="$OPTS --wwwdir=$WWWDIR"

if [ "$START_CHILLI" != "1" ] ; then
   echo "Chilli default off. Look at /etc/default/chilli"
   exit 0
fi

test -f $DAEMON || exit 0
test -f $CONFFILE || exit 0

# . /etc/chilli/functions

# check_required

parse_whitelist() {
        if [ -s $TEMPORAL_CONFFILE ]; then
		awk '
		BEGIN { buf="" }
		  /^newdomain/ {
		    s=$0
		    sub(/^newdomain /,"",s)
		    n=split(s,array,",");
		    for (i=1;i<=n;i++) {
		      d=array[i]
		      not=0
		      dom=""
		      if (d ~ /^!/) {
		        not = 1
		        d = substr(d,2)
		      }
		      if (d ~ /^\*\./) {
		        dom = "^(.*\\.)?" substr(d,3) "$\n"
		      } else {
		        dom = "^" d "$\n"
		      }
		      if (not) {
		        printf("!%s", dom)
		      } else {
		        buf = buf dom
		      }
		    }
 		 }
		END { printf("%s", buf) }
		' $TEMPORAL_CONFFILE > $WHITELIST
                sed /^newdomain/d -i $TEMPORAL_CONFFILE
        fi
}

radiusconfig() {
        rm -rf $TEMPORAL_CONFFILE
        $RADCONFIG -c /dev/null \
		--radiusserver1="$RADIUSSERVER1" \
                --radiusserver2="$RADIUSSERVER2" \
                --radiussecret="$RADIUSSECRET" \
                --adminuser="$RADIUSADMUSR" \
                --adminpasswd="$RADIUSADMPWD" \
                --radiusnasid="$NASID" \
                --dhcpif=$DHCPIF \
                --radiusretry="$RADIUSRETRY" \
                --radiusretrysec="$RADIUSRETRYSEC" \
                --radiustimeout="$RADIUSTIMEOUT" \
                > $TEMPORAL_CONFFILE

	parse_whitelist

	# Strip some options that this version of chilli
	# will not understand (fix with profiles)
	diff $TEMPORAL_CONFFILE $CONFFILE > /dev/null
	return $?
}

RETVAL=0
prog="chilli"


case "$1" in
    start)
	echo -n "Starting $DESC: "
	/sbin/modprobe tun >/dev/null 2>&1
	echo 1 > /proc/sys/net/ipv4/ip_forward
	iptables -t nat -I POSTROUTING -j MASQUERADE
	iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
	
	if [ "$DEBUG" != "1" ] ; then
	    start-stop-daemon --start --quiet --pidfile /var/run/$NAME.pid --exec $DAEMON -- $OPTS 
	else
	    $DAEMON $OPTS --debug --fg
	fi
	RETVAL=$?
	echo "$NAME."
	;;
    
    checkrunning)
	check=`start-stop-daemon --start --exec $DAEMON --test`
	if [ x"$check" != x"$DAEMON already running." ] ; then
            $0 start
	fi
	;;
    
    radconfig)
#      [ -e $MAIN_CONF ] || writeconfig
	radiusconfig
	if [ ! $? -eq 0 ]; then
	    [ -s $TEMPORAL_CONFFILE ] && cp $TEMPORAL_CONFFILE $CONFFILE
	    $0 restart
	fi
	;;
    
    restart)
	$0 stop
	sleep 2
	$0 start
	RETVAL=$?
	;;
    
    stop)
	echo -n "Stopping $DESC: "
        # crontab -l 2>&- | grep -v $0 | crontab -
	start-stop-daemon --oknodo --stop --quiet --pidfile /var/run/$NAME.pid --exec $DAEMON
        iptables -t nat -D POSTROUTING 1
        iptables -D FORWARD 1
	
	echo "$NAME."
	;;
    
    reload)
	$0 restart
	;;
    
    force-reload)
	$0 restart
	;;
    condrestart)
	check=`start-stop-daemon --start --exec $DAEMON --test`
	if [ x"$check" != x"$DAEMON already running." ] ; then
	    $0 restart
	    RETVAL=$?
	fi
	;;
    
    status)
	# status chilli
	check=`start-stop-daemon --start --exec $DAEMON --test`
	if [ x"$check" == x"$DAEMON already running." ] ; then
	    RETVAL=1
	fi
	RETVAL=0
	;;
    
    *)
	N=/etc/init.d/$NAME
	echo "Usage: $N {start|stop|restart|condrestart|status|reload|radconfig}" >&2
	exit 1
	;;
esac

exit 0

