#ifndef _CFG_ipv6_H_
#define _CFG_ipv6_H_
#include "cal_cfg.h"
/* Neighbor Discovery */
char* cal_ipv6_neighbordiscovery_Enable_get(void);
int cal_ipv6_neighbordiscovery_Enable_set(char* val);
char* cal_ipv6_neighbordiscovery_ifsetting_Enable_get(void);
int cal_ipv6_neighbordiscovery_ifsetting_Enable_set(char* val);
char* cal_ipv6_neighbordiscovery_ifsetting_Status_get(void);
char* cal_ipv6_neighbordiscovery_ifsetting_Interface_get(void);
int cal_ipv6_neighbordiscovery_ifsetting_Interface_set(char* val);
char* cal_ipv6_neighbordiscovery_ifsetting_RetransTimer_get(void);
int cal_ipv6_neighbordiscovery_ifsetting_RetransTimer_set(char* val);
char* cal_ipv6_neighbordiscovery_ifsetting_RtrSolicitationInterval_get(void);
int cal_ipv6_neighbordiscovery_ifsetting_RtrSolicitationInterval_set(char* val);
char* cal_ipv6_neighbordiscovery_ifsetting_MaxRtrSolicitations_get(void);
int cal_ipv6_neighbordiscovery_ifsetting_MaxRtrSolicitations_set(char* val);
char* cal_ipv6_neighbordiscovery_ifsetting_NUDEnable_get(void);
int cal_ipv6_neighbordiscovery_ifsetting_NUDEnable_set(char* val);
char* cal_ipv6_neighbordiscovery_ifsetting_RSEnable_get(void);
int cal_ipv6_neighbordiscovery_ifsetting_RSEnable_set(char* val);
int cal_ipv6_neighbordiscovery_ifsetting_get(int id, void **);
int cal_ipv6_neighbordiscovery_ifsetting_set(int id, void *);
/* Router Advertisement */
char* cal_ipv6_routeradvertisement_Enable_get(void);
int cal_ipv6_routeradvertisement_Enable_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_Enable_get(void);
int cal_ipv6_routeradvertisement_ifsetting_Enable_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_Status_get(void);
char* cal_ipv6_routeradvertisement_ifsetting_Interface_get(void);
int cal_ipv6_routeradvertisement_ifsetting_Interface_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_MaxRtrAdvInterval_get(void);
int cal_ipv6_routeradvertisement_ifsetting_MaxRtrAdvInterval_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_MinRtrAdvInterval_get(void);
int cal_ipv6_routeradvertisement_ifsetting_MinRtrAdvInterval_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_AdvDefaultLifetime_get(void);
int cal_ipv6_routeradvertisement_ifsetting_AdvDefaultLifetime_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_AdvManagedFlag_get(void);
int cal_ipv6_routeradvertisement_ifsetting_AdvManagedFlag_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_AdvOtherConfigFlag_get(void);
int cal_ipv6_routeradvertisement_ifsetting_AdvOtherConfigFlag_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_AdvMobileAgentFlag_get(void);
int cal_ipv6_routeradvertisement_ifsetting_AdvMobileAgentFlag_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_AdvPreferredRouterFlag_get(void);
int cal_ipv6_routeradvertisement_ifsetting_AdvPreferredRouterFlag_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_AdvNDProxyFlag_get(void);
int cal_ipv6_routeradvertisement_ifsetting_AdvNDProxyFlag_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_AdvLinkMTU_get(void);
int cal_ipv6_routeradvertisement_ifsetting_AdvLinkMTU_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_AdvReachableTime_get(void);
int cal_ipv6_routeradvertisement_ifsetting_AdvReachableTime_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_AdvRetransTimer_get(void);
int cal_ipv6_routeradvertisement_ifsetting_AdvRetransTimer_set(char* val);
char* cal_ipv6_routeradvertisement_ifsetting_AdvCurHopLimit_get(void);
int cal_ipv6_routeradvertisement_ifsetting_AdvCurHopLimit_set(char* val);
int cal_ipv6_routeradvertisement_ifsetting_get(int id, void **);
int cal_ipv6_routeradvertisement_ifsetting_set(int id, void *);
char* cal_ipv6_routeradvertisement_ifsetting_option_Enable_get(int id);
int cal_ipv6_routeradvertisement_ifsetting_option_Enable_set(int id, char* val);
char* cal_ipv6_routeradvertisement_ifsetting_option_Tag_get(int id);
int cal_ipv6_routeradvertisement_ifsetting_option_Tag_set(int id, char* val);
char* cal_ipv6_routeradvertisement_ifsetting_option_Value_get(int id);
int cal_ipv6_routeradvertisement_ifsetting_option_Value_set(int id, char* val);
int cal_ipv6_routeradvertisement_ifsetting_option_get(int id0, int id1, void**);
int cal_ipv6_routeradvertisement_ifsetting_option_set(int id0, int id1, void*);
int cal_ipv6_routeradvertisement_ifsetting_option_tab_add(int id);
int cal_ipv6_routeradvertisement_ifsetting_option_tab_del(int id);
int cal_ipv6_routeradvertisement_ifsetting_option_tab_set(int id, cfg_routeradvertisement_ifsetting_option_t *p_cfg_routeradvertisement_ifsetting_option);
int cal_ipv6_routeradvertisement_ifsetting_option_tab_num_get(int **pp_index_array);
/* DHCPv6 Client */
char* cal_ipv6_dhcpv6_client_Enable_get(void);
int cal_ipv6_dhcpv6_client_Enable_set(char* val);
char* cal_ipv6_dhcpv6_client_Interface_get(void);
int cal_ipv6_dhcpv6_client_Interface_set(char* val);
char* cal_ipv6_dhcpv6_client_Status_get(void);
char* cal_ipv6_dhcpv6_client_DUID_get(void);
int cal_ipv6_dhcpv6_client_DUID_set(char* val);
char* cal_ipv6_dhcpv6_client_RequestAddresses_get(void);
int cal_ipv6_dhcpv6_client_RequestAddresses_set(char* val);
char* cal_ipv6_dhcpv6_client_RequestPrefixes_get(void);
int cal_ipv6_dhcpv6_client_RequestPrefixes_set(char* val);
char* cal_ipv6_dhcpv6_client_RapidCommit_get(void);
int cal_ipv6_dhcpv6_client_RapidCommit_set(char* val);
char* cal_ipv6_dhcpv6_client_Renew_get(void);
int cal_ipv6_dhcpv6_client_Renew_set(char* val);
char* cal_ipv6_dhcpv6_client_SuggestedT1_get(void);
int cal_ipv6_dhcpv6_client_SuggestedT1_set(char* val);
char* cal_ipv6_dhcpv6_client_SuggestedT2_get(void);
int cal_ipv6_dhcpv6_client_SuggestedT2_set(char* val);
char* cal_ipv6_dhcpv6_client_SupportedOptions_get(void);
int cal_ipv6_dhcpv6_client_SupportedOptions_set(char* val);
char* cal_ipv6_dhcpv6_client_RequestedOptions_get(void);
int cal_ipv6_dhcpv6_client_RequestedOptions_set(char* val);
int cal_ipv6_dhcpv6_client_get(int id, void **);
int cal_ipv6_dhcpv6_client_set(int id, void *);
char* cal_ipv6_dhcpv6_client_server_SourceAddress_get(int id);
int cal_ipv6_dhcpv6_client_server_SourceAddress_set(int id, char* val);
char* cal_ipv6_dhcpv6_client_server_DUID_get(int id);
int cal_ipv6_dhcpv6_client_server_DUID_set(int id, char* val);
char* cal_ipv6_dhcpv6_client_server_InformationRefreshTime_get(int id);
int cal_ipv6_dhcpv6_client_server_InformationRefreshTime_set(int id, char* val);
int cal_ipv6_dhcpv6_client_server_get(int id0, int id1, void**);
int cal_ipv6_dhcpv6_client_server_set(int id0, int id1, void*);
char* cal_ipv6_dhcpv6_client_sentoption_Enable_get(int id);
int cal_ipv6_dhcpv6_client_sentoption_Enable_set(int id, char* val);
char* cal_ipv6_dhcpv6_client_sentoption_Tag_get(int id);
int cal_ipv6_dhcpv6_client_sentoption_Tag_set(int id, char* val);
char* cal_ipv6_dhcpv6_client_sentoption_Value_get(int id);
int cal_ipv6_dhcpv6_client_sentoption_Value_set(int id, char* val);
int cal_ipv6_dhcpv6_client_sentoption_get(int id0, int id1, void**);
int cal_ipv6_dhcpv6_client_sentoption_set(int id0, int id1, void*);
char* cal_ipv6_dhcpv6_client_receivedoption_Tag_get(int id);
int cal_ipv6_dhcpv6_client_receivedoption_Tag_set(int id, char* val);
char* cal_ipv6_dhcpv6_client_receivedoption_Value_get(int id);
int cal_ipv6_dhcpv6_client_receivedoption_Value_set(int id, char* val);
char* cal_ipv6_dhcpv6_client_receivedoption_Server_get(int id);
int cal_ipv6_dhcpv6_client_receivedoption_Server_set(int id, char* val);
int cal_ipv6_dhcpv6_client_receivedoption_get(int id0, int id1, void**);
int cal_ipv6_dhcpv6_client_receivedoption_set(int id0, int id1, void*);
int cal_ipv6_dhcpv6_client_receivedoption_tab_del_all(int id);
int cal_ipv6_dhcpv6_client_receivedoption_tab_update(void); 
/* DHCPv6 Server */
char* cal_ipv6_dhcpv6_server_Enable_get(void);
int cal_ipv6_dhcpv6_server_Enable_set(char* val);
char* cal_ipv6_dhcpv6_server_pool_Enable_get(void);
int cal_ipv6_dhcpv6_server_pool_Enable_set(char* val);
char* cal_ipv6_dhcpv6_server_pool_Status_get(void);
char* cal_ipv6_dhcpv6_server_pool_Order_get(void);
int cal_ipv6_dhcpv6_server_pool_Order_set(char* val);
char* cal_ipv6_dhcpv6_server_pool_Interface_get(void);
int cal_ipv6_dhcpv6_server_pool_Interface_set(char* val);
char* cal_ipv6_dhcpv6_server_pool_DUID_get(void);
int cal_ipv6_dhcpv6_server_pool_DUID_set(char* val);
char* cal_ipv6_dhcpv6_server_pool_VendorClassID_get(void);
int cal_ipv6_dhcpv6_server_pool_VendorClassID_set(char* val);
char* cal_ipv6_dhcpv6_server_pool_UserClassID_get(void);
int cal_ipv6_dhcpv6_server_pool_UserClassID_set(char* val);
char* cal_ipv6_dhcpv6_server_pool_SourceAddress_get(void);
int cal_ipv6_dhcpv6_server_pool_SourceAddress_set(char* val);
char* cal_ipv6_dhcpv6_server_pool_SourceAddressMask_get(void);
int cal_ipv6_dhcpv6_server_pool_SourceAddressMask_set(char* val);
char* cal_ipv6_dhcpv6_server_pool_IANAEnable_get(void);
int cal_ipv6_dhcpv6_server_pool_IANAEnable_set(char* val);
char* cal_ipv6_dhcpv6_server_pool_IANAPrefixes_get(void);
int cal_ipv6_dhcpv6_server_pool_IANAPrefixes_set(char* val);
char* cal_ipv6_dhcpv6_server_pool_IAPDEnable_get(void);
int cal_ipv6_dhcpv6_server_pool_IAPDEnable_set(char* val);
char* cal_ipv6_dhcpv6_server_pool_IAPDPrefixes_get(void);
int cal_ipv6_dhcpv6_server_pool_IAPDPrefixes_set(char* val);
char* cal_ipv6_dhcpv6_server_pool_IAPDAddLength_get(void);
int cal_ipv6_dhcpv6_server_pool_IAPDAddLength_set(char* val);
int cal_ipv6_dhcpv6_server_pool_get(int id, void **);
int cal_ipv6_dhcpv6_server_pool_set(int id, void *);
char* cal_ipv6_dhcpv6_server_pool_client_SourceAddress_get(int id);
int cal_ipv6_dhcpv6_server_pool_client_SourceAddress_set(int id, char* val);
char* cal_ipv6_dhcpv6_server_pool_client_Active_get(int id);
int cal_ipv6_dhcpv6_server_pool_client_Active_set(int id, char* val);
int cal_ipv6_dhcpv6_server_pool_client_get(int id0, int id1, void**);
int cal_ipv6_dhcpv6_server_pool_client_set(int id0, int id1, void*);
int cal_ipv6_dhcpv6_server_pool_client_tab_del_all(int id);
int cal_ipv6_dhcpv6_server_pool_client_tab_update(void); 
char* cal_ipv6_dhcpv6_server_pool_client_ipv6address_IPAddress_get(int id0, int id1);
int cal_ipv6_dhcpv6_server_pool_client_ipv6address_IPAddress_set(int id0, int id1, char* val);
char* cal_ipv6_dhcpv6_server_pool_client_ipv6address_PreferredLifetime_get(int id0, int id1);
int cal_ipv6_dhcpv6_server_pool_client_ipv6address_PreferredLifetime_set(int id0, int id1, char* val);
char* cal_ipv6_dhcpv6_server_pool_client_ipv6address_ValidLifetime_get(int id0, int id1);
int cal_ipv6_dhcpv6_server_pool_client_ipv6address_ValidLifetime_set(int id0, int id1, char* val);
int cal_ipv6_dhcpv6_server_pool_client_ipv6address_get(int id0, int id1, int id2, void**);
int cal_ipv6_dhcpv6_server_pool_client_ipv6address_set(int id0, int id1, int id2, void*);
char* cal_ipv6_dhcpv6_server_pool_client_ipv6prefix_Prefix_get(int id0, int id1);
int cal_ipv6_dhcpv6_server_pool_client_ipv6prefix_Prefix_set(int id0, int id1, char* val);
char* cal_ipv6_dhcpv6_server_pool_client_ipv6prefix_PreferredLifetime_get(int id0, int id1);
int cal_ipv6_dhcpv6_server_pool_client_ipv6prefix_PreferredLifetime_set(int id0, int id1, char* val);
char* cal_ipv6_dhcpv6_server_pool_client_ipv6prefix_ValidLifetime_get(int id0, int id1);
int cal_ipv6_dhcpv6_server_pool_client_ipv6prefix_ValidLifetime_set(int id0, int id1, char* val);
int cal_ipv6_dhcpv6_server_pool_client_ipv6prefix_get(int id0, int id1, int id2, void**);
int cal_ipv6_dhcpv6_server_pool_client_ipv6prefix_set(int id0, int id1, int id2, void*);
char* cal_ipv6_dhcpv6_server_pool_client_option_Tag_get(int id0, int id1);
int cal_ipv6_dhcpv6_server_pool_client_option_Tag_set(int id0, int id1, char* val);
char* cal_ipv6_dhcpv6_server_pool_client_option_Value_get(int id0, int id1);
int cal_ipv6_dhcpv6_server_pool_client_option_Value_set(int id0, int id1, char* val);
int cal_ipv6_dhcpv6_server_pool_client_option_get(int id0, int id1, int id2, void**);
int cal_ipv6_dhcpv6_server_pool_client_option_set(int id0, int id1, int id2, void*);
int cal_ipv6_dhcpv6_server_pool_client_option_tab_del_all(int id0, int id1);
char* cal_ipv6_dhcpv6_server_pool_option_Enable_get(int id);
int cal_ipv6_dhcpv6_server_pool_option_Enable_set(int id, char* val);
char* cal_ipv6_dhcpv6_server_pool_option_Tag_get(int id);
int cal_ipv6_dhcpv6_server_pool_option_Tag_set(int id, char* val);
char* cal_ipv6_dhcpv6_server_pool_option_Value_get(int id);
int cal_ipv6_dhcpv6_server_pool_option_Value_set(int id, char* val);
int cal_ipv6_dhcpv6_server_pool_option_get(int id0, int id1, void**);
int cal_ipv6_dhcpv6_server_pool_option_set(int id0, int id1, void*);
/* Data Privacy */
char *cal_ipv6_ip_basic_privacy_get(void);
int cal_ipv6_ip_basic_privacy_set(char *val);
#endif
